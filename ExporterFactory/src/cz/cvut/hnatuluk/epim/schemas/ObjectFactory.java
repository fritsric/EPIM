//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.3-hudson-jaxb-ri-2.2.3-3- 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.03.13 at 07:55:02 odp. CET 
//


package cz.cvut.hnatuluk.epim.schemas;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the cz.cvut.hnatuluk.epim.schemas package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Footer_QNAME = new QName("http://www.w3schools.com", "footer");
    private final static QName _RelationCardinalityTo_QNAME = new QName("http://www.w3schools.com", "relationCardinalityTo");
    private final static QName _AnotationAttrName_QNAME = new QName("http://www.w3schools.com", "anotationAttrName");
    private final static QName _ModelImage_QNAME = new QName("http://www.w3schools.com", "modelImage");
    private final static QName _RelationCardinalityFrom_QNAME = new QName("http://www.w3schools.com", "relationCardinalityFrom");
    private final static QName _Header_QNAME = new QName("http://www.w3schools.com", "header");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: cz.cvut.hnatuluk.epim.schemas
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Model }
     * 
     */
    public Model createModel() {
        return new Model();
    }

    /**
     * Create an instance of {@link Heading }
     * 
     */
    public Heading createHeading() {
        return new Heading();
    }

    /**
     * Create an instance of {@link ClassName }
     * 
     */
    public ClassName createClassName() {
        return new ClassName();
    }

    /**
     * Create an instance of {@link StaticText }
     * 
     */
    public StaticText createStaticText() {
        return new StaticText();
    }

    /**
     * Create an instance of {@link ClassList }
     * 
     */
    public ClassList createClassList() {
        return new ClassList();
    }

    /**
     * Create an instance of {@link Class }
     * 
     */
    public Class createClass() {
        return new Class();
    }

    /**
     * Create an instance of {@link ClassVisibility }
     * 
     */
    public ClassVisibility createClassVisibility() {
        return new ClassVisibility();
    }

    /**
     * Create an instance of {@link AttrList }
     * 
     */
    public AttrList createAttrList() {
        return new AttrList();
    }

    /**
     * Create an instance of {@link Attribute }
     * 
     */
    public Attribute createAttribute() {
        return new Attribute();
    }

    /**
     * Create an instance of {@link AttrName }
     * 
     */
    public AttrName createAttrName() {
        return new AttrName();
    }

    /**
     * Create an instance of {@link AttrDataType }
     * 
     */
    public AttrDataType createAttrDataType() {
        return new AttrDataType();
    }

    /**
     * Create an instance of {@link AttrVisibility }
     * 
     */
    public AttrVisibility createAttrVisibility() {
        return new AttrVisibility();
    }

    /**
     * Create an instance of {@link AnotationList }
     * 
     */
    public AnotationList createAnotationList() {
        return new AnotationList();
    }

    /**
     * Create an instance of {@link Anotation }
     * 
     */
    public Anotation createAnotation() {
        return new Anotation();
    }

    /**
     * Create an instance of {@link AnotationName }
     * 
     */
    public AnotationName createAnotationName() {
        return new AnotationName();
    }

    /**
     * Create an instance of {@link AnotationAttrs }
     * 
     */
    public AnotationAttrs createAnotationAttrs() {
        return new AnotationAttrs();
    }

    /**
     * Create an instance of {@link AnotationAttrValueList }
     * 
     */
    public AnotationAttrValueList createAnotationAttrValueList() {
        return new AnotationAttrValueList();
    }

    /**
     * Create an instance of {@link AnotationAttrValue }
     * 
     */
    public AnotationAttrValue createAnotationAttrValue() {
        return new AnotationAttrValue();
    }

    /**
     * Create an instance of {@link MethodList }
     * 
     */
    public MethodList createMethodList() {
        return new MethodList();
    }

    /**
     * Create an instance of {@link Method }
     * 
     */
    public Method createMethod() {
        return new Method();
    }

    /**
     * Create an instance of {@link MethodName }
     * 
     */
    public MethodName createMethodName() {
        return new MethodName();
    }

    /**
     * Create an instance of {@link MethodReturnType }
     * 
     */
    public MethodReturnType createMethodReturnType() {
        return new MethodReturnType();
    }

    /**
     * Create an instance of {@link MethodVisibility }
     * 
     */
    public MethodVisibility createMethodVisibility() {
        return new MethodVisibility();
    }

    /**
     * Create an instance of {@link RelationList }
     * 
     */
    public RelationList createRelationList() {
        return new RelationList();
    }

    /**
     * Create an instance of {@link Relation }
     * 
     */
    public Relation createRelation() {
        return new Relation();
    }

    /**
     * Create an instance of {@link RelationFromClassName }
     * 
     */
    public RelationFromClassName createRelationFromClassName() {
        return new RelationFromClassName();
    }

    /**
     * Create an instance of {@link RelationToClassName }
     * 
     */
    public RelationToClassName createRelationToClassName() {
        return new RelationToClassName();
    }

    /**
     * Create an instance of {@link RelationType }
     * 
     */
    public RelationType createRelationType() {
        return new RelationType();
    }

    /**
     * Create an instance of {@link NotationAttrName }
     * 
     */
    public NotationAttrName createNotationAttrName() {
        return new NotationAttrName();
    }

    /**
     * Create an instance of {@link RelationCardinalityStartTo }
     * 
     */
    public RelationCardinalityStartTo createRelationCardinalityStartTo() {
        return new RelationCardinalityStartTo();
    }

    /**
     * Create an instance of {@link RelationCardinalityEndTo }
     * 
     */
    public RelationCardinalityEndTo createRelationCardinalityEndTo() {
        return new RelationCardinalityEndTo();
    }

    /**
     * Create an instance of {@link RelationCardinalityEndFrom }
     * 
     */
    public RelationCardinalityEndFrom createRelationCardinalityEndFrom() {
        return new RelationCardinalityEndFrom();
    }

    /**
     * Create an instance of {@link DocxTemplate }
     * 
     */
    public DocxTemplate createDocxTemplate() {
        return new DocxTemplate();
    }

    /**
     * Create an instance of {@link RelationCardinalityStartFrom }
     * 
     */
    public RelationCardinalityStartFrom createRelationCardinalityStartFrom() {
        return new RelationCardinalityStartFrom();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3schools.com", name = "footer")
    public JAXBElement<String> createFooter(String value) {
        return new JAXBElement<String>(_Footer_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Object }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3schools.com", name = "relationCardinalityTo")
    public JAXBElement<Object> createRelationCardinalityTo(Object value) {
        return new JAXBElement<Object>(_RelationCardinalityTo_QNAME, Object.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Object }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3schools.com", name = "anotationAttrName")
    public JAXBElement<Object> createAnotationAttrName(Object value) {
        return new JAXBElement<Object>(_AnotationAttrName_QNAME, Object.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Object }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3schools.com", name = "modelImage")
    public JAXBElement<Object> createModelImage(Object value) {
        return new JAXBElement<Object>(_ModelImage_QNAME, Object.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Object }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3schools.com", name = "relationCardinalityFrom")
    public JAXBElement<Object> createRelationCardinalityFrom(Object value) {
        return new JAXBElement<Object>(_RelationCardinalityFrom_QNAME, Object.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.w3schools.com", name = "header")
    public JAXBElement<String> createHeader(String value) {
        return new JAXBElement<String>(_Header_QNAME, String.class, null, value);
    }

}
