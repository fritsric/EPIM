//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.3-hudson-jaxb-ri-2.2.3-3- 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.03.26 at 08:51:35 odp. CET 
//


package cz.cvut.hnatuluk.entities.docxTemplate;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the cz.cvut.hnatuluk.entities.docxTemplate package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _LabelAfter_QNAME = new QName("", "labelAfter");
    private final static QName _LabelBefore_QNAME = new QName("", "labelBefore");
    private final static QName _StaticText_QNAME = new QName("", "staticText");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: cz.cvut.hnatuluk.entities.docxTemplate
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link AttrDatatype }
     * 
     */
    public AttrDatatype createAttrDatatype() {
        return new AttrDatatype();
    }

    /**
     * Create an instance of {@link Label }
     * 
     */
    public Label createLabel() {
        return new Label();
    }

    /**
     * Create an instance of {@link Model }
     * 
     */
    public Model createModel() {
        return new Model();
    }

    /**
     * Create an instance of {@link ModelImage }
     * 
     */
    public ModelImage createModelImage() {
        return new ModelImage();
    }

    /**
     * Create an instance of {@link ClassList }
     * 
     */
    public ClassList createClassList() {
        return new ClassList();
    }

    /**
     * Create an instance of {@link Class }
     * 
     */
    public Class createClass() {
        return new Class();
    }

    /**
     * Create an instance of {@link Heading }
     * 
     */
    public Heading createHeading() {
        return new Heading();
    }

    /**
     * Create an instance of {@link Classname }
     * 
     */
    public Classname createClassname() {
        return new Classname();
    }

    /**
     * Create an instance of {@link AnotationList }
     * 
     */
    public AnotationList createAnotationList() {
        return new AnotationList();
    }

    /**
     * Create an instance of {@link Anotation }
     * 
     */
    public Anotation createAnotation() {
        return new Anotation();
    }

    /**
     * Create an instance of {@link AnotationName }
     * 
     */
    public AnotationName createAnotationName() {
        return new AnotationName();
    }

    /**
     * Create an instance of {@link AnotationAttrs }
     * 
     */
    public AnotationAttrs createAnotationAttrs() {
        return new AnotationAttrs();
    }

    /**
     * Create an instance of {@link AnotationAttrName }
     * 
     */
    public AnotationAttrName createAnotationAttrName() {
        return new AnotationAttrName();
    }

    /**
     * Create an instance of {@link AnotationAttrValueList }
     * 
     */
    public AnotationAttrValueList createAnotationAttrValueList() {
        return new AnotationAttrValueList();
    }

    /**
     * Create an instance of {@link AnotationAttrValue }
     * 
     */
    public AnotationAttrValue createAnotationAttrValue() {
        return new AnotationAttrValue();
    }

    /**
     * Create an instance of {@link AttrList }
     * 
     */
    public AttrList createAttrList() {
        return new AttrList();
    }

    /**
     * Create an instance of {@link Attribute }
     * 
     */
    public Attribute createAttribute() {
        return new Attribute();
    }

    /**
     * Create an instance of {@link AttrName }
     * 
     */
    public AttrName createAttrName() {
        return new AttrName();
    }

    /**
     * Create an instance of {@link AttrVisibility }
     * 
     */
    public AttrVisibility createAttrVisibility() {
        return new AttrVisibility();
    }

    /**
     * Create an instance of {@link ClassVisibility }
     * 
     */
    public ClassVisibility createClassVisibility() {
        return new ClassVisibility();
    }

    /**
     * Create an instance of {@link MethodList }
     * 
     */
    public MethodList createMethodList() {
        return new MethodList();
    }

    /**
     * Create an instance of {@link Method }
     * 
     */
    public Method createMethod() {
        return new Method();
    }

    /**
     * Create an instance of {@link MethodVisibility }
     * 
     */
    public MethodVisibility createMethodVisibility() {
        return new MethodVisibility();
    }

    /**
     * Create an instance of {@link MethodName }
     * 
     */
    public MethodName createMethodName() {
        return new MethodName();
    }

    /**
     * Create an instance of {@link MethodReturnType }
     * 
     */
    public MethodReturnType createMethodReturnType() {
        return new MethodReturnType();
    }

    /**
     * Create an instance of {@link RelationList }
     * 
     */
    public RelationList createRelationList() {
        return new RelationList();
    }

    /**
     * Create an instance of {@link Relation }
     * 
     */
    public Relation createRelation() {
        return new Relation();
    }

    /**
     * Create an instance of {@link RelationCardinalityEndFrom }
     * 
     */
    public RelationCardinalityEndFrom createRelationCardinalityEndFrom() {
        return new RelationCardinalityEndFrom();
    }

    /**
     * Create an instance of {@link RelationCardinalityStartFrom }
     * 
     */
    public RelationCardinalityStartFrom createRelationCardinalityStartFrom() {
        return new RelationCardinalityStartFrom();
    }

    /**
     * Create an instance of {@link RelationCardinalityStartTo }
     * 
     */
    public RelationCardinalityStartTo createRelationCardinalityStartTo() {
        return new RelationCardinalityStartTo();
    }

    /**
     * Create an instance of {@link RelationFromClassname }
     * 
     */
    public RelationFromClassname createRelationFromClassname() {
        return new RelationFromClassname();
    }

    /**
     * Create an instance of {@link RelationToClassname }
     * 
     */
    public RelationToClassname createRelationToClassname() {
        return new RelationToClassname();
    }

    /**
     * Create an instance of {@link RelationType }
     * 
     */
    public RelationType createRelationType() {
        return new RelationType();
    }

    /**
     * Create an instance of {@link RelationCardinalityEndTo }
     * 
     */
    public RelationCardinalityEndTo createRelationCardinalityEndTo() {
        return new RelationCardinalityEndTo();
    }

    /**
     * Create an instance of {@link Header }
     * 
     */
    public Header createHeader() {
        return new Header();
    }

    /**
     * Create an instance of {@link Footer }
     * 
     */
    public Footer createFooter() {
        return new Footer();
    }

    /**
     * Create an instance of {@link DocxTemplate }
     * 
     */
    public DocxTemplate createDocxTemplate() {
        return new DocxTemplate();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "labelAfter")
    public JAXBElement<String> createLabelAfter(String value) {
        return new JAXBElement<String>(_LabelAfter_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "labelBefore")
    public JAXBElement<String> createLabelBefore(String value) {
        return new JAXBElement<String>(_LabelBefore_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "staticText")
    public JAXBElement<String> createStaticText(String value) {
        return new JAXBElement<String>(_StaticText_QNAME, String.class, null, value);
    }

}
